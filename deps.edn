{:paths     ["src" "resources"]
 :deps      {org.clojure/clojure               {:mvn/version "1.11.1"}
             org.apache.lucene/lucene-core     {:mvn/version "9.8.0"}
             org.apache.lucene/lucene-queryparser {:mvn/version "9.8.0"}
             org.apache.lucene/lucene-analyzers-common {:mvn/version "8.11.2"}
             ring/ring-core                    {:mvn/version "1.10.0"}
             ring/ring-jetty-adapter           {:mvn/version "1.10.0"}
             ring/ring-json                    {:mvn/version "0.5.1"}
             ring/ring-mock                    {:mvn/version "0.4.0"}
             compojure/compojure                {:mvn/version "1.7.0"}
             org.clojure/data.json             {:mvn/version "2.4.0"}
             ring/ring-devel                    {:mvn/version "1.10.0"}
             org.eclipse.jgit/org.eclipse.jgit {:mvn/version "6.7.0.202309050840-r"}
             talltale/talltale                  {:mvn/version "0.4.3"}
             org.slf4j/slf4j-api               {:mvn/version "2.0.9"}
             org.slf4j/slf4j-simple           {:mvn/version "2.0.9"}
             environ/environ                   {:mvn/version "1.2.0"}}
 :aliases   {:test    {:extra-paths ["test"]
                       :extra-deps  {io.github.cognitect-labs/test-runner
                                     {:git/tag "v0.5.1" :git/sha "dfb30dd"}}
                       :exec-fn cognitect.test-runner.api/test
                       :main-opts ["-m" "cognitect.test-runner"]}
             :example {:main-opts ["-m" "chrondb.example"]
                       :exec-fn chrondb.example/-main}
             :build {:deps {io.github.clojure/tools.build {:git/tag "v0.9.4" :git/sha "76b78fe"}}
                     :ns-default build}
             :dev {:extra-paths ["dev"]
                   :extra-deps {ring/ring-devel {:mvn/version "1.10.0"}}}
             :uberjar {:replace-deps {com.github.seancorfield/depstar {:mvn/version "2.1.303"}}
                       :exec-fn hf.depstar/uberjar
                       :exec-args {:aot true
                                   :jar "target/chrondb.jar"
                                   :main-class chrondb.core}}
             :coverage {:extra-paths ["test"]
                        :extra-deps {cloverage/cloverage {:mvn/version "1.2.4"}}
                        :main-opts ["-m" "cloverage.coverage"
                                    "--src-ns-path" "src"
                                    "--test-ns-path" "test"
                                    "--ns-regex" "chrondb.*"
                                    "--test-ns-regex" "chrondb.*test"
                                    "--fail-threshold" "65"
                                    "--codecov"
                                    "--html"
                                    "--output" "target/coverage"]}
             :codox {:extra-deps {codox/codox {:mvn/version "0.10.8"}}
                    :exec-fn codox.main/generate-docs
                    :exec-args {:name "ChronDB"
                              :version "0.1.0"
                              :description "Chronological key/value Database storing based on database-shaped git (core) architecture"
                              :source-paths ["src"]
                              :output-path "docs/api"
                              :source-uri "https://github.com/chrondb/chrondb/blob/main/{filepath}#L{line}"
                              :metadata {:doc/format :markdown}
                              :themes [:default]
                              :namespaces [chrondb.core
                                         chrondb.storage.git
                                         chrondb.storage.memory
                                         chrondb.storage.protocol
                                         chrondb.index.lucene
                                         chrondb.index.protocol
                                         chrondb.util.logging]}}}}
